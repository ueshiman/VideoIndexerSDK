using VideoIndexerAccess.Repositories.DataModel;
using VideoIndexerAccessCore.VideoIndexerClient.ApiModel;

namespace VideoIndexerAccess.Repositories.DataModelMapper
{
    public class CustomLanguageMapper : ICustomLanguageMapper
    {
        private readonly ICustomLanguageModelTrainingDataFileMapper _customLanguageModelTrainingDataFileMapper;

        public CustomLanguageMapper(ICustomLanguageModelTrainingDataFileMapper customLanguageModelTrainingDataFileMapper)
        {
            _customLanguageModelTrainingDataFileMapper = customLanguageModelTrainingDataFileMapper;
        }

        public CustomLanguageModel MapFrom(ApiCustomLanguageModel model) => new()
        {
            Id = model.id,
            Name = model.name,
            Language = model.language,
            State = model.state,
            LanguageModelId = model.languageModelId,
            Files = model.files.Select(_customLanguageModelTrainingDataFileMapper.MapFrom).ToList(),
            HasCrisEdits = model.hasCrisEdits,
            IsAutoGeneratedModel = model.isAutoGeneratedModel,
        };

        public ApiCustomLanguageModel MapToApiCustomLanguageModel(CustomLanguageModel model)
        {
            return new ApiCustomLanguageModel
            {
                id = model.Id,
                name = model.Name,
                language = model.Language,
                state = model.State,
                languageModelId = model.LanguageModelId,
                files = model.Files.Select(_customLanguageModelTrainingDataFileMapper.MapToApiCustomLanguageModelTrainingDataFileModel).ToList(),
                hasCrisEdits = model.HasCrisEdits,
                isAutoGeneratedModel = model.IsAutoGeneratedModel,
            };
        }
    }
}
